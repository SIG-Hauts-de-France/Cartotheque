ARG VER_PHP=5.6
ARG VER_NODEJS=10
FROM node:${VER_NODEJS}-stretch AS node
FROM php:${VER_PHP}-apache-stretch

##### NODEJS IMAGE
COPY --from=node "/opt"         "/opt"
COPY --from=node "/usr/local"   "/usr/local"
RUN mv "/usr/local/bin/docker-entrypoint.sh" "/usr/local/bin/docker-node-entrypoint.sh"


##### PROXY SETTINGS (predefined ARGs)
ENV HTTP_PROXY=${HTTP_PROXY} HTTPS_PROXY=${HTTPS_PROXY} \
    http_proxy=${HTTP_PROXY} https_proxy=${HTTPS_PROXY}


##### COMPIL PACKAGES
RUN printf "Acquire::http::Proxy \"${HTTP_PROXY}\";\n" > /etc/apt/apt.conf.d/99HttpProxy \
 && DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Check-Valid-Until=false update \
 && apt-get install --no-install-recommends --yes \
    apt-transport-https apt-utils gnupg build-essential make locales \
    libfreetype6-dev libjpeg62-turbo-dev libpng-dev libwebp-dev libxpm-dev \
    libicu-dev libkrb5-dev libbz2-dev libzip-dev libxml2-dev libxslt1-dev \
#   libc-client2007e-dev libsnmp-dev libpspell-dev libtidy-dev \
    libpq-dev libldap2-dev \
 && apt-get clean && rm -rf /var/lib/apt/lists/*


##### PHP EXTENSIONS
RUN set -xe ; php -v \
  ; docker-php-ext-configure gd   --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
  ; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \
# ; docker-php-ext-configure imap --with-kerberos --with-imap-ssl \
  ; docker-php-ext-install -j$(nproc) \
#   iconv mbstring recode mcrypt \
    bcmath \
    bz2 \
    exif \
    gd \
    gettext \
#   imap \
    intl \
    ldap \
#   mysqli \
    opcache \
#   pdo_mysql \
    pdo_pgsql \
    pgsql \
#   pspell \
#   snmp \
#   soap \
#   tidy \
#   xmlrpc \
    xsl \
    zip \
  ; pecl channel-update pecl.php.net && pecl install uploadprogress \
  ; docker-php-ext-enable uploadprogress \
  ; php -m

##### CLEANUP build tools
RUN docker-php-source delete \
 && apt-get remove --yes \
    libfreetype6-dev libjpeg62-turbo-dev libpng-dev libwebp-dev libxpm-dev \
    libicu-dev libkrb5-dev libbz2-dev libzip-dev libxml2-dev libxslt1-dev \
#   libc-client2007e-dev libsnmp-dev libpspell-dev libtidy-dev libsensors4-dev \
    libpq-dev libldap2-dev \
    comerr-dev icu-devtools krb5-multidev zlib1g-dev \
#   autoconf cpp cpp-8 gcc gcc-8 g++ g++-8 make \
 && apt-get clean && rm -rf /var/lib/apt/lists/*


##### UTILS PACKAGES (client mysql/psql requis pour drush)
RUN [ -d /usr/share/man/man1 ] || mkdir -p /usr/share/man/man1 \
  ; [ -d /usr/share/man/man7 ] || mkdir -p /usr/share/man/man7 \
  ; DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Check-Valid-Until=false update \
 && apt-get install --no-install-recommends --yes \
    less nano vim mc curl wget links unzip zip git subversion patch pwgen jq \
    iputils-ping telnet openssh-client net-tools dnsutils whois procps rsync \
#   mariadb-client \
    postgresql-client \
 && apt-get clean && rm -rf /var/lib/apt/lists/*

##### NODE UTILS (global via npm)
ENV NODE_ENV=production \
    NPM_CONFIG_LOGLEVEL=info
RUN set -xe \
  ; npm version \
  ; npm install -g sass \
  ; npm install -g less \
# ; npm install -g uglifycss \
# ; npm install -g uglify-js \
# ; npm install -g gulp-cli \
  ; npm list -g --depth=0

##### COMPOSER SETUP (global via php)
ARG DIR_COMPOSER=/usr/local/bin
ARG BIN_COMPOSER=composer
RUN if [ -n "${DIR_COMPOSER}" -a -n "${BIN_COMPOSER}" ]; then set -xe \
  ; [ -d "${DIR_COMPOSER}" ] || mkdir -p "${DIR_COMPOSER}" \
  ; php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
  ; SIG_COMPOSER="$(php -r "readfile('https://composer.github.io/installer.sig');")" \
  ; php -r "if (hash_file('sha384','composer-setup.php')!=='${SIG_COMPOSER}'){ unlink('composer-setup.php'); echo 'Installer corrupt'; exit(1); }" \
  ; php composer-setup.php -- --install-dir="${DIR_COMPOSER}" --filename="${BIN_COMPOSER}" \
  ; rm composer-setup.php \
  ; "${DIR_COMPOSER}/${BIN_COMPOSER}" --version \
  ; fi

##### DRUSH INSTALL (global via composer)
ARG VER_DRUSH=8.*
RUN if [ -n "${VER_DRUSH}" -a "x${VER_DRUSH}" != "xno" ]; then set -xe \
  ; [ -d "/opt/composer" ] || mkdir -p "/opt/composer" \
  ; composer global require drush/drush:${VER_DRUSH} --working-dir="/opt/composer" \
  ; ln -s "/opt/composer/vendor/bin/drush" "/usr/local/bin/drush" \
# ; echo ". /opt/composer/vendor/bin/drush.complete.sh" >> ~/.bashrc \
  ; mkdir ~/.drush && printf "<?php\nini_set('memory_limit','512M');\n" > ~/.drush/drushrc.php \
  ; drush --version \
  ; fi


##### DRUPAL INSTALL (via drush)
ARG VER_DRUPAL=7
RUN if [ -n "${VER_DRUPAL}" -a "x${VER_DRUPAL}" != "xno" ]; then set -xe \
  ; drush pm-download drupal-${VER_DRUPAL} --destination="/var/www" --drupal-project-rename="html" -y \
  ; mkdir -p "/var/www/html/sites/all/modules/contrib" \
  ; mkdir -p "/var/www/html/sites/all/themes/contrib" \
  ; cd "/var/www/html" && rm -f CHANGELOG.txt COPYRIGHT.txt INSTALL*.txt LICENSE.txt MAINTAINERS.txt README.txt UPGRADE.txt \
  ; fi
RUN if [ -d "/var/www/html/sites/all/modules/contrib" ]; then set -xe \
  ; cd "/var/www/html" && drush dl -y \
    admin_menu module_filter ctools devel smtp xautoload libraries \
    views admin_views views_bulk_operations better_exposed_filters \
    configuration node_clone bundle_copy override_node_options ldap \
    rules term_merge taxonomy_csv facetapi search_api search_api_db \
    email url entity references autocomplete_deluxe date views_between_dates_filter \
    jquery_update phpexcel redmine_rest_api image_url_formatter lightbox2 \
    imagecache_actions \
  ; wget -q "https://www.drupal.org/files/pgsql_combine_filter_views.tar__1.gz" \
    -O - | tar xz -C "/var/www/html/sites/all/modules/contrib/" \
  ; wget -q "https://ftp.drupal.org/files/translations/7.x/drupal/drupal-7.80.fr.po" \
    -O "/var/www/html/profiles/standard/translations/drupal.fr.po" \
  ; wget -q "https://github.com/PHPOffice/PHPExcel/archive/refs/tags/1.8.2.tar.gz" \
    -O - | tar xz -C "/var/www/html/sites/all/libraries/" \
  ; mv "/var/www/html/sites/all/libraries/PHPExcel-1.8.2" "/var/www/html/sites/all/libraries/PHPExcel" \
  ; fi

##### DRUPAL CONFIG
COPY "./settings.docker.php" "/usr/src/settings.instance.php"
RUN if [ -d "/var/www/html/sites/default" ]; then set -xe \
  ; cp "/var/www/html/sites/default/default.settings.php" "/var/www/html/sites/default/settings.php" \
  ; mv "/usr/src/settings.instance.php" "/var/www/html/sites/default/settings.instance.php" \
  ; printf "\n### Chargement des configurations spécifiques de l'instance (non versionnées)\n"                     >> "/var/www/html/sites/default/settings.php" \
  ; printf "if (file_exists(__DIR__.'/settings.instance.php')) include_once __DIR__.'/settings.instance.php';\n\n" >> "/var/www/html/sites/default/settings.php" \
  ; head -c74 /dev/urandom | base64 -w0 > "/var/www/drupal-salt.txt" \
  ; cd "/var/www/html" && drush core-status \
  ; fi


##### WEBSERVER CONFIG
ARG PORT_HTTP=1080
ARG PORT_HTTPS=1443
EXPOSE ${PORT_HTTP}/tcp
#EXPOSE ${PORT_HTTPS}/tcp
COPY "./drupal-vhost.conf" "/etc/apache2/sites-available/001-drupal.conf"
COPY "./httpd-pgadmin.inc" "/etc/apache2/conf-available/proxy-pgadmin.conf"
COPY "./httpd-maildev.inc" "/etc/apache2/conf-available/proxy-maildev.conf"
RUN set -xe \
  ; a2ensite    001-drupal \
  ; a2dissite   000-default \
  ; a2disconf   serve-cgi-bin \
  ; a2dismod    access_compat \
  ; a2enmod     env setenvif headers rewrite proxy proxy_http \
  ; a2enconf    proxy-pgadmin proxy-maildev \
  ; sed -i "s/80/${PORT_HTTP}/"   "/etc/apache2/ports.conf" \
  ; sed -i "s/443/${PORT_HTTPS}/" "/etc/apache2/ports.conf" \
  ; cp "${PHP_INI_DIR}/php.ini-production" "${PHP_INI_DIR}/php.ini"
COPY "./php.ini" "${PHP_INI_DIR}/conf.d/zz_custom.ini"


##### SYSTEM TIMEZONE
ARG SYS_TIMEZONE=Europe/Paris
RUN if [ -n "${SYS_TIMEZONE}" ]; then set -xe \
  ; echo "${SYS_TIMEZONE}" > "/etc/timezone" \
  ; rm -f "/etc/localtime" \
# ; ln -snf "/usr/share/zoneinfo/${SYS_TIMEZONE}" "/etc/localtime" \
  ; dpkg-reconfigure -f noninteractive tzdata \
  ; printf '[PHP]\ndate.timezone = "%s"\n', ${SYS_TIMEZONE} > "${PHP_INI_DIR}/conf.d/zz_timezone.ini" \
  ; date \
  ; fi

##### SYSTEM LOCALE
ARG SYS_LOCALE=fr_FR.UTF-8
ENV LC_ALL=${SYS_LOCALE} \
    LANG=${SYS_LOCALE}
RUN if [ -n "${SYS_LOCALE}" ]; then set -xe \
  ; sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/'     "/etc/locale.gen" \
  ; sed -i -e "s/# ${SYS_LOCALE} UTF-8/${SYS_LOCALE} UTF-8/" "/etc/locale.gen" \
# ; locale-gen \
  ; dpkg-reconfigure --frontend=noninteractive locales \
  ; update-locale LANG=${SYS_LOCALE} \
  ; fi

##### BASH ENVIRONMENT
COPY "./mc.ini" "/usr/share/mc/mc.ini"
RUN echo "alias ll='ls --color=auto -lah'"                > "/etc/profile.d/zz_alias.sh" \
  ; echo "PATH=\$PATH:/var/www/html/vendor/bin"           > "/etc/profile.d/zz_paths.sh" \
# ; cat  "/opt/composer/vendor/bin/drush.complete.sh"     > "/etc/profile.d/zz_drush.sh" \
  ; ln -s "/opt/composer/vendor/bin/drush.complete.sh"      "/etc/profile.d/zz_drush.sh" \
  ; echo ". /etc/profile"  >> ~/.bashrc


##### WORKER USER (shell utile pour mc)
ARG UID_WORKER=
ARG GID_WORKER=
RUN printf "=== UID[%s] / GID[%s]\n" "${UID_WORKER}" "${GID_WORKER}"; set -xe \
  ; if [ -n "${GID_WORKER}" ] \
  ;   then getent group "${GID_WORKER}" >/dev/null 2>&1 || groupadd --gid "${GID_WORKER}" --non-unique "worker${GID_WORKER}" \
  ; fi \
  ; if [ -n "${UID_WORKER}" ] \
  ;   then OPT_GROUP="--user-group"; [ -n "${GID_WORKER}" ] && OPT_GROUP="--gid ${GID_WORKER}" \
  ;   id "${UID_WORKER}" >/dev/null 2>&1 || useradd \
        --non-unique --comment "Project worker user" \
        --uid ${UID_WORKER} ${OPT_GROUP} --groups "www-data" \
        --home "/home/worker${UID_WORKER}" --create-home \
#       --shell "/usr/sbin/nologin" \
        --shell "/bin/bash" \
        "worker${UID_WORKER}" \
  ;   if [ -d "/home/worker${UID_WORKER}" ] \
  ;     then echo ". /etc/profile"                       >> "/home/worker${UID_WORKER}/.bashrc" \
  ;     [ -n "${GID_WORKER}" ] && echo "umask 0002"      >> "/home/worker${UID_WORKER}/.bashrc" \
  ;     [ -d "/home/worker${UID_WORKER}/.drush" ]  || mkdir "/home/worker${UID_WORKER}/.drush" \
  ;     printf "<?php\nini_set('memory_limit','512M');\n" > "/home/worker${UID_WORKER}/.drush/drushrc.php" \
  ;     chown "worker${UID_WORKER}" -R "/home/worker${UID_WORKER}" \
  ;   fi \
  ; fi
ENV USR_WORKER="${UID_WORKER:-www-data}" \
    GRP_WORKER="${GID_WORKER:-www-data}"


##### DRUPAL STORAGES (si pas de volume monté)
RUN set -xe \
  ; [ -d "/var/www/html/sites/default/files" ] || mkdir -p "/var/www/html/sites/default/files" \
  ; [ -d "/var/www/private"                  ] || mkdir -p "/var/www/private" \
  ; [ -d "/var/www/drush-backups"            ] || mkdir -p "/var/www/drush-backups" \
  ; chown "${USR_WORKER}:${GRP_WORKER}" -R "/var/www/html/sites/default/files" && chmod g+srw -R "/var/www/html/sites/default/files" \
  ; chown "${USR_WORKER}:${GRP_WORKER}" -R "/var/www/private"                  && chmod g+srw -R "/var/www/private" \
  ; chown "${USR_WORKER}:${GRP_WORKER}" -R "/var/www/drush-backups"            && chmod g+srw -R "/var/www/drush-backups" \
  ; echo "Storages owned by '${USR_WORKER}:${GRP_WORKER}'"


##### INIT SCRIPT
#VOLUME [ "/var/www/sites/default/files", "/var/www/private", "/var/www/drush-backups" ]
WORKDIR "/var/www/html"
USER "${UID_WORKER:-root}"
COPY "./docker-drupal-entrypoint.sh" "/usr/local/bin/"
ENTRYPOINT [ "docker-drupal-entrypoint.sh" ]
CMD [ "apache2-foreground" ]


LABEL description="Conteneur Drupal7 pour la cartothèque HdF (dev sans custom)" \
      maintainer="Grégory MARIGOT <support@teicee.com>" \
      vendor="téïcée" \
      version="2.2"
