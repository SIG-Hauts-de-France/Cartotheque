<?php

//creation du path AJAX pour la recherche de carte selon le numéro de carte
function tic_redmine_data_importer_menu()
{
	$items = array();
	$items['tic_redmine_data_importer/get/number/%'] = array(
			'title'		    => 'AJAX Tic Redmine Data Importer Get Number',
			'page callback' => 'tic_redmine_data_importer_ajax_search_callback',
			'page arguments'    => array(3),
			'access arguments'  => array("access content"),
			'type' 		    => MENU_CALLBACK
	);
	return $items;
}

//callback
function tic_redmine_data_importer_ajax_search_callback($number)
{
	$number = trim($number);

	// check here that the $number is not already existing in database

	$toJsonOutput = array("status" => 0, "already_recorded" => false); //check Redmine response set default to 1

	$query = db_select("field_data_field_numero_de_carte", "nc");
	$query->fields("nc", array("field_numero_de_carte_value"));
	$query->condition("nc.deleted", 0, "=");
	$query->condition("nc.field_numero_de_carte_value", $number, "=");
	$query->range(0, 1);
	$result = $query->execute();

	$data = $result->fetchAll();

	if (isset($data[0]->field_numero_de_carte_value))
		$toJsonOutput['already_recorded'] = true;

	$end_reached = false;
	$offset = 0;
	$total = 0;
	$limit = 100;
	$issues_all = array();
	while (!$end_reached)
	{
		$issues = redmine_rest_api_call("issues", array("project_id" => 2, "status_id" => 7, "offset" => $offset, "limit" => $limit, "cf_1" => $number));

		$total = $issues->decoded_data->total_count;
		$offset = $offset + $limit;
		$issues_all = array_merge($issues_all, $issues->decoded_data->issues);
		
		if ($issues->code !== 200 || $offset >= $total)
		   $end_reached = true;
	}

	//We make the search here to not communicate all fields
	$issue_found_index = -1;

	$issues_all_max = count($issues_all);
	for ($i = 0; $i < $issues_all_max; $i++)
	{
		//perform the search by cf custom field : card number
		if (strcmp(trim($issues_all[$i]->custom_fields[0]->value), $number) == 0)
		{
			$issue_found_index = $i;
			break ;
		}
	}

	$toJsonOutput['status'] = 1;	//check Redmine response set default to 1
	$toJsonOutput['found'] = ($issue_found_index > -1) ? 1 : 0;
	$toJsonOutput['issue'] = ($issue_found_index > -1) ? $issues_all[$issue_found_index] : false;

	/*
	*
	*	Call to TIC Taxonomy Relational Dictionary
	*	
	*	Start
	*/

	if ($toJsonOutput['issue'] !== false)
	{

		//get the "theme_iso" value and send it to the module
		$term_name = "Localisation (info et services de positionnement)";
		$vocabulary_machine_name = "themes_ISO";

		$tic_taxonomy_relational_dictionary = tic_taxonomy_relational_dictionary_search_by_term($term_name, $vocabulary_machine_name);

		$toJsonOutput['tic_taxonomy_relational_dictionary_node'] = $tic_taxonomy_relational_dictionary;

		//access to the good custom field

	}
	/*
	*
	*	Call to TIC Taxonomy Relational Dictionary
	*	
	*	End
	*/

	drupal_json_output($toJsonOutput);
}

//Surcharge du formulaire de création de carte pour y ajouter le bouton d'import depuis Redmine
function tic_redmine_data_importer_form_alter(&$form, &$form_state, $form_id)
{
 	if ($form_id !== "carte_node_form")
		return ;

	//surcharger les styles CSS pour placer le bouton à droite du numéro de carte

	$mod_css = "/* Téicée - CSS Addon : Module TIC Redmine Data Importer Start */";
	//bouton
	$mod_css .= "#redmine_data_importer_call_button {height: 28px;}";
	$mod_css .= "#edit-redmine-data-importer-call {display:inline-block;}";

	//champs numéro de carte
	$mod_css .= "#edit-field-numero-de-carte {display:inline-block;width:calc(98% - 212px);}";
	$mod_css .= "/* Téicée - CSS Addon : Module TIC Redmine Data Importer End */";

	drupal_add_css($mod_css, "inline");
	drupal_add_library("system", "drupal.ajax");

	//inject the required JS file into the current page
	$module_path = drupal_get_path("module", "tic_redmine_data_importer");
	drupal_add_js($module_path."/resources/js/main.js");

	//overrride :
	drupal_add_js($module_path."/resources/js/override.js");

	/*
	*
	*	Call to TIC Taxonomy Relational Dictionary
	*	
	*	Start
	*/

	//load all available nodes for this content
	$node_group_name = "carto themes auto link";

	//$node_group_list = tic_taxonomy_relational_dictionary_search_by_node_group_name($node_group_name, true);

	$node_group_list = tic_taxonomy_relational_dictionary_import(array($node_group_name));

	drupal_add_js("var tic_trd_node_group = ".json_encode($node_group_list).";//console.log('node group : ', tic_trd_node_group);", "inline");
	/*
	*
	*	Call to TIC Taxonomy Relational Dictionary
	*	
	*	End
	*/

	/*
	*	A PLACER DANS TIC GEO SOURCE ? Formulaire de création de carte
	*/

	$form['thematiques_hdf_parent'] = array(
		"#type"			=> "select",
		"#title"		=> t("Thématiques Parentes HdF (Hauts de France)"),
		"#options"		=> tic_taxonomy_relational_dictionary_form_select_output("thematiques_HdF", 0),
		"#weight"		=> 2,
		"#required"		=> true,
		"#attributes"	=> array(
							"id"		=> array("select-thematiques-hdf-parent"),
							"onchange"	=> array("tic_redmine_data_importer_thematical_select_parent_onchange()")
						)
	);

	$form['thematiques_hdf_children'] = array(
		"#type"			=> "select",
		"#title"		=> t("Thématiques Enfants HdF (Hauts de France)"),
		"#options"		=> array(),
		"#weight"		=> 3,
		"#required"		=> false,
		"#attributes"	=> array(
							"id"		=> array("select-thematiques-hdf-children"),
							"onload"	=> array("tic_redmine_data_importer_thematical_select_children_hide_init()"),
						)
	);

	drupal_add_css(".form-item.form-type-select.form-item-thematiques-hdf-children {display:none;}", "inline");

 	//ajoute le bouton d'import Redmine
	$form['redmine_data_importer_call'] = array(
	    "#type"			=> "item",
	    "#markup"		=> "<button id=\"redmine_data_importer_call_button\" onclick=\"javascript:tic_redmine_data_importer_init();return false;\">".t('Importer depuis Redmine')."</button>",
	    "#weight"		=> 0
	);

	//place le bouton en haut de page (première position) -> evolution faire que le module puisse être attaché à un champ depuis l'administration
	//get the weight of Numéro de carte and place the button to weight + 1 to be next and make the CSS mod functionnal
	/*
		foreach ($form as $field)
		{
			$form[$field]['#weight']++;
		}
	*/
}

?>